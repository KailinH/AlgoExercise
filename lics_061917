"""
Source:http://www.lintcode.com/en/problem/longest-increasing-continuous-subsequence/
"""
class Solution:
    # @param {int[]} A an array of Integer
    # @return {int}  an integer
    def longestIncreasingContinuousSubsequence(self, A):
        # Write your code here
        if not A:
            return 0
        lics = 1 #denote the length of longest increasing continuous subsequence
        ldcs = 1 #denote the length of longest decreasing continuous subsequence
        n = len(A)
        dp = [1]*(n)
        for i in range(1,n):
            if A[i] >= A[i-1]:
                ldcs = 1 #change sign, so decreasing is set to 1
                lics += 1
                dp[i] = max(ldcs, lics)
            else:
                lics = 1 #increasing is set to 1
                ldcs += 1
                dp[i] = max(ldcs, lics)
        return max(dp)
