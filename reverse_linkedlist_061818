#reverse a linked list in place, one pass#
"""
Definition of ListNode

class ListNode(object):

    def __init__(self, val, next=None):
        self.val = val
        self.next = next
"""

class Solution:
    """
    @param head: n
    @return: The new head of reversed linked list.
    """
    def reverse(self, head):
        # write your code here
        if not head:
            return None
        prev = None
        curr = head
        nextn = None
        while curr:
            nextn = curr.next #store next node
            curr.next = prev #actual reversing
            #move one step forward
            prev = curr 
            curr = nextn
        #return new head
        return prev
        
  """
  demonstration:
  head = ListNode(1)
  head.next = ListNode(2)
  head.next.next = ListNode(3)
  1->2->3->None
  new_head = reverse(head)
  new_head.val = 3
  new_head.next.val = 2
  new_head.next.next.val = 1
  3->2->1->None
  """
