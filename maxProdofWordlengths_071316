'''
Given a string array words, find the maximum value of length(word[i]) * length(word[j]) where the two words do not share common letters. 
You may assume that each word will contain only lower case letters. If no such two words exist, return 0.
Source: https://leetcode.com/problems/maximum-product-of-word-lengths/
'''
class Solution(object):
    def maxProdofWordlengths(self,words):
        wl = [len(w) for w in words]
        candidates = []
        prod = 0
        for i in range(len(wl)):
            for j in range(i+1,len(wl)):
                if not set(words[i])&set(words[j]):
                      prod = wl[i]*wl[j]
                      candidates.append(prod)
        if candidates:
            ans = max(candidates)
            return ans
        else:
            return 0

words1 = ["abcw", "baz", "foo", "bar", "xtfn", "abcdef"]
words2 = ["a", "ab", "abc", "d", "cd", "bcd", "abcd"]
words3 = ["a", "aa", "aaa", "aaaa"]
print(Solution().maxProdofWordlengths(words1))  #16
print(Solution().maxProdofWordlengths(words2))  #4
print(Solution().maxProdofWordlengths(words3))  #0

