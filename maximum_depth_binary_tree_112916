"""
Source:http://www.lintcode.com/en/problem/maximum-depth-of-binary-tree/
Given a binary tree, find its maximum depth.
The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.
"""
"""
Definition of TreeNode:
class TreeNode:
    def __init__(self, val):
        self.val = val
        self.left, self.right = None, None
"""
class Solution:
    """
    @param root: The root of binary tree.
    @return: An integer
    """ 
    def maxDepth(self, root):
        # write your code here
        if not root:
            return 0
        if root.left and not root.right:
            return self.maxDepth(root.left) + 1
        if root.right and not root.left:
            return self.maxDepth(root.right) + 1
        return max(self.maxDepth(root.left), self.maxDepth(root.right)) + 1
        
 ## note, to find the minimum depth, just need to change the max() to min() to the last line of return
