"""
Source:http://www.lintcode.com/en/problem/first-position-of-target/
an implementation of binary search
For a given sorted array (ascending order) and a target number, find the first index of this number in O(log n) time complexity.

If the target number does not exist in the array, return -1.
"""
class Solution:
    # @param nums: The integer array
    # @param target: Target number to find
    # @return the first position of target in nums, position start from 0 
    def binarySearch(self, nums, target):
        # write your code here
        ans = 0
        if not nums or not target:
            return None
        if target not in nums:
            return -1
        start = 0
        end = len(nums)
        mid = (end - start)//2
        while nums[mid] > target or nums[mid] < target:
            if nums[mid] > target:
                end = mid
                mid = start + (end - start)//2
            else:
                start = mid + 1
                mid = start + (end - start)//2
        if nums[mid] == target:
            prev = mid 
            while (prev -1) >= 0 and nums[mid] == nums[prev-1]:
                prev -= 1
            ans = prev
        return ans
