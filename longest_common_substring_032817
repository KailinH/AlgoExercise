"""
Source:http://www.lintcode.com/en/problem/longest-common-substring/
Technique: Initiate a 2-D table to track the result, Dynamic programming, note that substring is different from subsequence
"""
class Solution:
    # @param A, B: Two string.
    # @return: the length of the longest common substring.
    def longestCommonSubstring(self, A, B):
        # write your code here
        lcs = [[0 for i in range(len(B)+1)] for j in range(len(A)+1)]
        lcs_count = 0
        for i in range(1,len(A) + 1):
            for j in range(1, len(B) + 1):
                if A[i-1] == B[j-1]:
                    lcs[i][j] = lcs[i-1][j-1] + 1
                    lcs_count = max(lcs[i][j], lcs_count)
        return lcs_count
