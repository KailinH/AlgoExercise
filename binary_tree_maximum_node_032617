"""
Source:http://www.lintcode.com/en/problem/binary-tree-maximum-node/
Not a BST, recursion, logic is max(root.val, left_max, right_max)
"""
def maxNode(root):
        # Write your code here
        if root is None:
            return None
        if not root.left and not root.right:
            return root.val
        if root.left:
            left_max = maxNode(root.left)
        if root.right:
            right_max = maxNode(root.right)
        return max(root.val, left_max, right_max)
class Node:
    # A utility function to create a new node
    def __init__(self ,key):
        self.val = key
        self.left = None
        self.right = None
root = Node(-1)
root.left = Node(-5)
root.right = Node(3)
root.left.left = Node(1)
root.left.right = Node(2)
root.right.left = Node(-4)
root.right.right = Node(-5)
maxNode(root)
#return 3
