"""
Source:http://www.lintcode.com/en/problem/search-a-2d-matrix/
Write an efficient algorithm that searches for a value in an m x n matrix.
This matrix has the following properties:
Integers in each row are sorted from left to right.
The first integer of each row is greater than the last integer of the previous row.
"""
class Solution:
    """
    @param matrix, a list of lists of integers
    @param target, an integer
    @return a boolean, indicate whether matrix contains target
    """
    def searchMatrix(self, matrix, target):
        # write your code here
        if not matrix:
            return False
        if not target:
            return True
        row = 0
        for i in range(len(matrix)):
            if matrix[i][0] <= target:
                row = i
        for n in matrix[row]:
            if n == target:
                return True
        return False
