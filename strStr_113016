"""
Source:http://www.lintcode.com/en/problem/strstr/
For a given source string and a target string, you should output the first index(from 0) of target string in source string.
If target does not exist in source, just return -1.
"""
## not O(n)KMP alogritm, my own algorithm)
class Solution:
    def strStr(self, source, target):
        # write your code here
        if target == "" and source == "":
            return 0
        if target == "":
            return 0
        if source == "":
            return -1
        if not source or not target:
            return -1
        if len(target) > len(source):
            return -1
        candidates = []
        target_len = len(target)
        sr = len(source) - target_len + 1
        for i in range(sr):
            if (source[i], source[i+target_len-1]) == (target[0], target[-1]):
                if target_len == 1 or target_len == 2:
                    return i
                else:
                    candidates.append([i, i+target_len-1])
        if not candidates:
            return -1
        for cd in candidates:
            for i in range(1,target_len-1):
                if source[cd[0]+i] != target[i]:
                    return -1
            return cd[0]
        return 1
