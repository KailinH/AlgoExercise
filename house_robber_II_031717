"""
http://www.lintcode.com/en/problem/house-robber-ii/
A variation of House robber when the houses are in a circle, dynamic programming
"""
class Solution:
    # @param nums: A list of non-negative integers.
    # return: an integer
    def houseRobber2(self, nums):
        # write your code here
        if not nums:
            return 0
        if len(nums) == 2:
            return 0
        if len(nums) == 1:
            return nums[0]
        dp_0 = [0] * len(nums) # ignore the first house
        dp_1 = [0] * len(nums) # ignore the last house
        dp_0[1] = nums[1]
        dp_1[1] = nums[0]
        for i in range(1,len(nums)-1): #ignore the last house
            dp_1[i+1] = max(dp_1[i], dp_1[i-1] + nums[i])
        
        for i in range(2, len(nums)): #ignore the first house
            dp_0[i] = max(dp_0[i-1], dp_0[i-2] + nums[i])
            
        return max(max(dp_0), max(dp_1))
