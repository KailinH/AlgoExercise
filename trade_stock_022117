"""
Source: https://www.interviewcake.com/question/python/stock-price
greedy algorithm, O(n) time and O(1) extra space
"""
def get_max_profit(price_list):
    if len(price_list) < 2:
        return None
    profit = max(price_list[1:]) - price_list[0]
    for i in range(2,len(price_list)):
        buy = price_list[i-1]
        sell = max(price_list[i:])
        temp = sell - buy
        if temp > profit:
            profit = temp
    return profit
print('maximum profit:',get_max_profit(stock_prices_yesterday))

# or use greedy algorithm
def get_max_profit2(price_list):
    if len(price_list) < 2:
        return None
    min_price = price_list[0]
    max_profit = price_list[1] - price_list[0]
    for i in range(1,len(price_list)):
        current_profit = price_list[i] - min_price
        max_profit = max(max_profit, current_profit)
        min_price = min(price_list[i], min_price)
    return max_profit
