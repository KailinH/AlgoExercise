
'''
warm up exercise for tree structure: build a tree using list of lists representation
warm-up source:http://interactivepython.org/runestone/static/pythonds/Trees/ListofListsRepresentation.html
'''
def BinaryTree(r):
    return [r, [], []]
def insertLeft(root,newBranch):
    t = root.pop(1)
    if len(t) > 1:
        root.insert(1,[newBranch,t,[]])
    else:
        root.insert(1,[newBranch, [], []])
    return root

def insertRight(root,newBranch):
    t = root.pop(2)
    if len(t) > 1:
        root.insert(2,[newBranch,[],t])
    else:
        root.insert(2,[newBranch,[],[]])
    return root

def getRootVal(root):
    return root[0]

def setRootVal(root,newVal):
    root[0] = newVal

def getLeftChild(root):
    return root[1]

def getRightChild(root):
    return root[2]
    
t = BinaryTree('a')
insertLeft(t,'b')
insertRight(t,'c')
insertLeft(getRightChild(t),'e')
insertRight(getRightChild(t),'f')
insertRight(getLeftChild(t),'d')




