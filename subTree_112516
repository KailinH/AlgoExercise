"""
Source:http://www.lintcode.com/en/problem/subtree/
"""
"""
Definition of TreeNode:
class TreeNode:
    def __init__(self, val):
        self.val = val
        self.left, self.right = None, None
"""
class Solution:
    # @param T1, T2: The roots of binary tree.
    # @return: True if T2 is a subtree of T1, or false.
    
    def isSubtree(self, T1, T2):
        def isIdentical(T1, T2):
            if not T1 and not T2:
                return True
            if not T1 or not T2:
                return False
            if T1.val != T2.val:
                return False
            else:
                return True
            return (isIdentical(T1.left, T2.left) and 
                    isIdentical(T1.right, T2.right) and
                    isIdentical(T1.val, T2.val))
        # write your code here
        if T2 is None:
            return True
        if T1 is None:
            return False
        if isIdentical(T1, T2):
            return True
        return Solution().isSubtree(T1.left, T2) or Solution().isSubtree(T1.right, T2)
