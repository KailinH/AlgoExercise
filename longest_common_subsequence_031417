"""
given two strings x and y, find the longest common subsequence (LCS) and print its length
2D Dynamic Programming
"""
#x: ABCBDAB, y:BDCABC, answer would be 'BCAB'
import numpy as np
def longest_common_subsequence(x,y):
    D = np.array([[0]*len(y)]*len(x))
    if x[0] == y[0]:
        D[0][0] = 1
    else:
        D[0][0] = 0
    if x[0] == y[1]:
        D[0][1] = 1
    else:
        D[0][1] = 0
    if x[1] == y[0]:
        D[1][0] = 1
    else:
        D[1][0] = 0
    for i in range(1,len(x)):
        for j in range(1,len(y)):
            if x[i]==y[j]:
                D[i][j] = D[i-1][j-1] + 1
            else:
                D[i][j] = max(D[i-1][j], D[i][j-1])
    print(D)        
    return D[-1][-1]
longest_common_subsequence('ABCBDAB','BDCABC')
[[0 0 0 0 0 0]
 [1 1 1 1 1 1]
 [0 1 2 2 2 2]
 [0 1 2 2 3 3]
 [0 1 2 2 3 3]
 [0 1 2 3 3 3]
 [0 1 2 3 4 4]]
4
