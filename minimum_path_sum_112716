"""
Source:http://www.lintcode.com/en/problem/minimum-path-sum/
Given a m x n grid filled with non-negative numbers,
find a path from top left to bottom right which minimizes the sum of all numbers along its path.
"""
class Solution:
    """
    @param grid: a list of lists of integers.
    @return: An integer, minimizes the sum of all numbers along its path
    """
    def minPathSum(self, grid):
        # write your code here
        m = len(grid)
        n = len(grid[0])
        for i in range(m):
          for j in range(n):
            if i == 0 and j > 0:
              grid[i][j] += grid[i][j-1]
            elif j == 0 and i > 0:
              grid[i][j] += grid[i-1][j]
            elif i > 0 and j > 0:
              grid[i][j] += min(grid[i-1][j], grid[i][j-1])
        return grid[m-1][n-1]
            
