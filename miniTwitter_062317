"""
Source:http://www.lintcode.com/en/problem/mini-twitter/
"""
'''
Definition of Tweet:
class Tweet:
    @classmethod
    def create(cls, user_id, tweet_text):
         # This will create a new tweet object,
         # and auto fill id
'''
class MiniTwitter:
    import datetime
    def __init__(self):
        # initialize your data structure here.
        self.users = {}

    # @param {int} user_id
    # @param {str} tweet
    # @return {Tweet} a tweet
    def postTweet(self, user_id, tweet_text):
        # Write your code here
        if user_id not in self.users:
            self.users[user_id] = {}
            ts = datetime.datetime.utcnow()
            self.users[user_id]['tweets'] = [tweet_text, ts]
        else:
            self.users[user_id]['tweets'].append([tweet_text,ts])
        return
 
    # @param {int} user_id
    # return {Tweet[]} 10 new posts recently
    # and sort by timeline
    def getTimeline(self, user_id):
        # Write your code here
        if user_id not in self.users:
            raise ValueError("user doesn't exist")
        if len(self.users[user_id]['tweets']) <= 10:
            return self.users[user_id]['tweets']
        else:
            return self.users[user_id]['tweets'][10:]


    # @param {int} from user_id
    # @param {int} to_user_id
    # from user_id follows to_user_id
    def follow(self, from_user_id, to_user_id):
        # Write your code here
        if from_user_id not in self.users:
            self.users[from_user_id] = {}
            self.users[from_user_id]['follow'] = [to_user_id]
        else:
            self.users[from_user_id]['follow'].append(to_user_id)
        return

    # @param {int} from user_id
    # @param {int} to_user_id
    # from user_id unfollows to_user_id
    def unfollow(self, from_user_id, to_user_id):
        # Write your code here
        if to_user_id not in self.users[from_user_id]['follow']:
            raise ValueError("can't unfollow user that was not followed before")
        self.users[from_user_id]['follow'].remove(to_user_id)
        return
